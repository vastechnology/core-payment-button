var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.003,1,2.126]],["body/controllers/AppController.html",[0,1.538,1,3.26,2,1.288,3,0.284,4,0.242,5,0.242,6,3.248,7,0.878,8,3.26,9,4.883,10,1.5,11,0.029,12,1.288,13,3.87,14,2.532,15,1.932,16,0.422,17,0.747,18,2.968,19,3.248,20,0.284,21,0.017,22,2.838,23,1.91,24,2.532,25,3.87,26,0.017,27,0.022,28,0.017]],["title/modules/AppModule.html",[29,1.003,30,2.126]],["body/modules/AppModule.html",[1,2.634,2,1.105,3,0.16,4,0.136,5,0.136,11,0.029,16,0.521,17,0.42,18,2.752,19,1.828,20,0.16,21,0.01,22,1.597,23,1.075,26,0.01,27,0.015,28,0.01,29,1.242,30,4.074,31,0.913,32,0.913,33,1.075,34,1.075,35,0.913,36,1.987,37,1.075,38,1.828,39,1.828,40,1.828,41,3.021,42,3.021,43,3.021,44,3.021,45,3.021,46,2.522,47,1.639,48,1.075,49,1.075,50,2.178,51,2.38,52,2.38,53,2.38,54,2.634,55,2.38,56,1.963,57,2.178,58,2.178,59,2.178,60,2.178,61,1.288,62,1.075,63,4.026,64,0.989,65,2.178,66,2.178,67,2.178,68,2.178,69,2.178,70,2.178,71,2.178,72,2.178,73,2.178]],["title/injectables/AppService.html",[18,1.75,74,1.003]],["body/injectables/AppService.html",[3,0.302,4,0.258,5,0.258,7,0.934,8,3.389,9,4.994,11,0.029,12,1.369,14,2.692,15,2.008,16,0.349,17,0.794,18,2.79,20,0.302,21,0.018,24,2.692,26,0.018,27,0.023,28,0.018,74,1.599,75,2.03,76,3.453,77,4.114,78,4.114,79,4.114]],["title/classes/Commerce.html",[21,0.014,80,1.362]],["body/classes/Commerce.html",[3,0.131,4,0.111,5,0.111,7,0.404,10,2.14,11,0.029,12,1.837,15,2.096,16,0.24,20,0.131,21,0.008,26,0.008,27,0.012,28,0.008,64,0.808,80,1.189,81,0.745,82,1.493,83,1.855,84,1.606,85,1.099,86,3.536,87,1.745,88,3.536,89,3.536,90,3.536,91,3.536,92,3.536,93,1.745,94,3.536,95,3.536,96,3.536,97,1.824,98,3.232,99,3.965,100,5.407,101,4.472,102,3.99,103,3.538,104,1.778,105,2.179,106,2.091,107,1.778,108,3.196,109,1.778,110,1.778,111,1.778,112,1.778,113,1.778,114,1.778,115,1.778,116,1.778,117,1.778,118,1.676,119,2.777,120,1.304]],["title/controllers/CommerceController.html",[0,1.003,52,1.921]],["body/controllers/CommerceController.html",[0,1.407,2,1.517,3,0.335,4,0.286,5,0.286,11,0.028,16,0.386,17,0.879,20,0.335,21,0.02,26,0.02,27,0.024,28,0.02,52,3.262,80,1.911,121,3.825,122,2.695,123,4.558]],["title/modules/CommerceModule.html",[29,1.003,41,1.921]],["body/modules/CommerceModule.html",[2,1.521,3,0.249,4,0.213,5,0.213,11,0.029,16,0.489,17,0.655,20,0.249,21,0.015,26,0.015,27,0.02,28,0.015,29,1.594,31,1.423,32,1.423,33,1.675,34,1.675,35,1.423,36,2.55,37,1.675,41,3.513,47,2.255,48,1.675,49,1.675,52,3.054,56,2.006,61,2.006,62,1.675,80,1.915,124,2.848,125,2.848,126,3.513,127,3.394,128,3.394,129,2.848,130,3.394,131,2.221]],["title/injectables/CommerceService.html",[74,1.003,126,1.921]],["body/injectables/CommerceService.html",[3,0.339,4,0.289,5,0.289,11,0.028,16,0.391,17,0.891,20,0.339,21,0.02,26,0.02,27,0.024,28,0.02,74,1.716,75,2.279,126,3.288,132,3.875]],["title/interfaces/EntityI.html",[84,1.476,133,1.921]],["body/interfaces/EntityI.html",[3,0.325,4,0.277,5,0.277,7,1.003,11,0.028,20,0.325,26,0.019,27,0.024,28,0.019,84,2.459,85,2.099,87,3.012,97,1.363,105,2.27,133,2.612,134,3.24,135,3.708]],["title/classes/Order.html",[21,0.014,136,1.604]],["body/classes/Order.html",[3,0.159,4,0.135,5,0.135,7,0.49,10,2.118,11,0.029,12,1.818,15,1.279,16,0.38,20,0.159,21,0.009,26,0.009,27,0.015,28,0.009,64,0.98,80,1.383,81,0.905,83,2.158,84,1.818,85,1.279,87,1.976,93,1.628,97,1.763,98,2.419,99,3.287,101,3.734,102,3.574,103,2.158,105,2.215,106,2.367,108,1.95,118,1.95,119,2.367,120,1.583,136,1.628,137,1.811,138,4.003,139,3.36,140,3.16,141,2.619,142,3.16,143,4.003,144,4.829,145,2.768,146,2.158,147,2.158,148,2.768,149,2.158,150,2.158,151,2.158,152,1.811,153,2.158,154,2.158,155,2.601,156,2.158,157,1.811,158,2.158,159,2.158,160,1.583,161,2.936,162,2.158,163,1.811,164,1.811,165,2.158,166,2.158]],["title/controllers/OrderController.html",[0,1.003,53,1.921]],["body/controllers/OrderController.html",[0,1.407,2,1.517,3,0.335,4,0.286,5,0.286,11,0.028,16,0.386,17,0.879,20,0.335,21,0.02,26,0.02,27,0.024,28,0.02,53,3.262,122,2.695,136,2.25,167,3.825,168,4.558]],["title/modules/OrderModule.html",[29,1.003,42,1.921]],["body/modules/OrderModule.html",[2,1.521,3,0.249,4,0.213,5,0.213,11,0.029,16,0.489,17,0.655,20,0.249,21,0.015,26,0.015,27,0.02,28,0.015,29,1.594,31,1.423,32,1.423,33,1.675,34,1.675,35,1.423,36,2.55,37,1.675,42,3.513,47,2.255,48,1.675,49,1.675,53,3.054,56,2.006,61,2.006,62,1.675,131,2.221,136,2.255,169,2.848,170,2.848,171,3.513,172,3.394,173,3.394,174,3.394,175,3.394]],["title/injectables/OrderService.html",[74,1.003,171,1.921]],["body/injectables/OrderService.html",[3,0.339,4,0.289,5,0.289,11,0.028,16,0.391,17,0.891,20,0.339,21,0.02,26,0.02,27,0.024,28,0.02,74,1.716,75,2.279,171,3.288,176,3.875]],["title/classes/Product.html",[21,0.014,155,1.75]],["body/classes/Product.html",[3,0.207,4,0.177,5,0.177,7,0.64,10,2.092,11,0.029,12,1.796,15,1.558,16,0.397,20,0.207,21,0.012,26,0.012,27,0.018,28,0.012,64,1.281,81,1.182,83,2.63,84,2.127,85,1.558,87,2.311,93,2.519,97,1.665,105,2.288,106,2.768,108,2.376,118,2.376,119,1.667,120,2.068,136,2.311,145,3.373,155,2.165,157,2.367,160,2.068,161,2.948,177,2.367,178,4.528,179,3.93,180,4.683,181,2.82,182,2.82,183,2.82,184,3.373,185,2.82,186,2.82,187,2.82,188,2.82,189,2.367,190,2.82,191,2.82]],["title/controllers/ProductController.html",[0,1.003,54,2.126]],["body/controllers/ProductController.html",[0,1.407,2,1.517,3,0.335,4,0.286,5,0.286,11,0.028,16,0.386,17,0.879,20,0.335,21,0.02,26,0.02,27,0.024,28,0.02,54,3.611,122,2.695,155,2.455,192,3.825,193,4.558]],["title/classes/ProductDTO.html",[21,0.014,194,2.126]],["body/classes/ProductDTO.html",[3,0.256,4,0.218,5,0.218,7,0.789,10,2.027,11,0.028,12,1.74,15,1.8,16,0.295,20,0.256,21,0.015,23,3.102,26,0.015,27,0.02,28,0.015,81,1.457,85,1.8,93,2.581,97,1.614,105,2.164,179,4.388,194,3.038,195,2.917,196,5.229,197,4.48,198,3.476,199,3.476,200,3.476,201,2.055]],["title/modules/ProductModule.html",[29,1.003,43,1.921]],["body/modules/ProductModule.html",[3,0.283,4,0.241,5,0.241,11,0.028,16,0.421,17,0.743,20,0.283,21,0.017,26,0.017,27,0.022,28,0.017,29,1.696,31,1.613,32,1.613,33,1.9,34,1.9,35,1.613,36,2.713,37,1.9,43,3.638,47,2.45,48,1.9,49,1.9,202,3.23,203,3.23,204,3.638,205,3.849,206,3.849]],["title/injectables/ProductService.html",[74,1.003,204,1.921]],["body/injectables/ProductService.html",[3,0.339,4,0.289,5,0.289,11,0.028,16,0.391,17,0.891,20,0.339,21,0.02,26,0.02,27,0.024,28,0.02,74,1.716,75,2.279,204,3.288,207,3.875]],["title/classes/PurchaseDTO.html",[21,0.014,208,2.126]],["body/classes/PurchaseDTO.html",[3,0.192,4,0.164,5,0.164,7,0.593,10,2.188,11,0.028,12,1.878,15,2.379,16,0.222,20,0.192,21,0.012,23,3.196,26,0.012,27,0.017,28,0.012,81,1.096,85,1.476,97,1.741,139,3.766,197,4.613,201,1.546,208,2.49,209,2.194,210,4.487,211,3.615,212,4.487,213,4.487,214,4.487,215,2.936,216,4.487,217,2.614,218,2.614,219,2.614,220,2.614,221,3.806,222,2.614,223,2.614,224,2.614]],["title/classes/Transaction.html",[21,0.014,225,1.75]],["body/classes/Transaction.html",[3,0.145,4,0.124,5,0.124,7,0.448,10,2.114,11,0.029,12,1.815,15,1.658,16,0.416,20,0.145,21,0.009,26,0.009,27,0.014,28,0.009,64,0.897,80,1.291,81,0.828,84,0.897,85,1.194,87,1.868,93,1.52,97,1.781,98,2.776,99,3.135,101,3.891,102,3.648,103,2.015,105,2.161,106,2.238,108,2.527,118,1.82,119,2.527,136,1.52,140,3.033,141,2.477,142,3.033,148,2.584,152,2.584,160,1.448,161,2.776,163,1.657,164,2.584,178,3.89,189,1.657,215,2.477,225,1.658,226,1.657,227,2.776,228,2.776,229,3.137,230,1.974,231,1.974,232,1.974,233,1.974,234,1.974,235,1.974,236,1.974,237,1.974,238,4.275,239,3.079,240,1.657,241,1.974,242,1.657,243,1.167,244,1.657,245,1.974,246,1.974]],["title/controllers/TransactionController.html",[0,1.003,51,1.921]],["body/controllers/TransactionController.html",[0,0.573,2,0.618,3,0.136,4,0.116,5,0.116,7,0.421,8,1.92,10,1.745,11,0.029,12,1.498,14,2.945,16,0.35,17,0.358,20,0.136,21,0.008,22,1.362,23,0.916,24,2.945,26,0.008,27,0.013,28,0.008,46,1.796,51,1.735,93,2.04,97,1.276,105,2.014,122,1.098,201,1.098,211,3.032,225,2.95,229,2.661,247,1.558,248,2.462,249,2.462,250,4.134,251,2.934,252,2.462,253,1.558,254,2.963,255,1.857,256,5.477,257,4.689,258,2.934,259,4.786,260,2.152,261,1.857,262,2.934,263,2.934,264,2.934,265,1.857,266,3.469,267,4.597,268,1.857,269,1.857,270,3.638,271,1.857,272,4.786,273,1.857,274,2.934,275,1.857,276,1.857,277,1.857,278,1.857,279,1.857,280,4.016,281,1.857,282,1.857,283,1.558,284,1.558,285,2.934,286,1.857,287,1.857,288,1.857,289,1.857,290,4.786,291,2.934,292,1.857,293,1.857,294,1.857,295,1.857,296,1.857,297,1.857,298,1.857,299,1.857,300,1.857,301,1.857,302,1.857,303,1.857,304,1.857,305,1.857,306,1.857]],["title/classes/TransactionDTO.html",[21,0.014,254,1.921]],["body/classes/TransactionDTO.html",[3,0.259,4,0.221,5,0.221,7,0.801,10,1.818,11,0.029,12,1.561,16,0.446,20,0.259,21,0.016,23,2.965,26,0.016,27,0.021,28,0.016,81,1.479,85,1.818,97,1.626,155,3.023,194,3.673,197,4.117,201,2.085,208,3.446,240,2.96,254,2.772,307,2.96,308,5.613,309,3.527,310,3.527,311,3.527]],["title/interfaces/TransactionI.html",[133,1.921,243,1.921]],["body/interfaces/TransactionI.html",[3,0.224,4,0.191,5,0.191,7,0.692,11,0.028,15,2.23,16,0.36,20,0.224,26,0.013,27,0.019,28,0.013,80,1.278,85,1.646,97,1.857,105,2.447,129,2.558,133,1.802,134,2.235,140,3.861,141,3.456,142,3.456,215,3.456,227,3.874,228,3.874,229,3.558,243,2.509,312,2.558,313,4.434,314,2.558]],["title/modules/TransactionModule.html",[29,1.003,44,1.921]],["body/modules/TransactionModule.html",[2,1.521,3,0.249,4,0.213,5,0.213,11,0.029,16,0.489,17,0.655,20,0.249,21,0.015,26,0.015,27,0.02,28,0.015,29,1.594,31,1.423,32,1.423,33,1.675,34,1.675,35,1.423,36,2.55,37,1.675,44,3.513,46,2.933,47,2.255,48,1.675,49,1.675,51,3.054,56,2.006,61,2.006,62,1.675,131,2.221,225,2.461,283,2.848,315,3.394,316,3.394,317,3.394,318,2.848,319,3.394]],["title/injectables/TransactionService.html",[46,1.604,74,1.003]],["body/injectables/TransactionService.html",[3,0.124,4,0.106,5,0.106,7,0.383,8,1.778,11,0.029,12,1.527,14,2.808,16,0.425,17,0.325,20,0.124,21,0.007,23,0.832,24,3.48,26,0.007,27,0.012,28,0.007,46,1.341,62,0.832,64,0.766,74,0.839,75,0.832,80,0.707,87,2.264,93,2.118,97,1.324,105,2.009,140,1.778,141,1.103,142,1.103,211,3.147,215,1.103,225,1.464,227,1.237,228,1.237,229,1.606,243,1.606,244,1.415,248,2.281,249,2.281,252,2.281,253,2.281,254,2.314,260,1.237,266,3.602,267,2.864,280,3.285,284,1.415,313,1.415,314,1.415,318,1.415,320,1.415,321,5.78,322,3.914,323,2.717,324,2.717,325,1.686,326,3.285,327,1.686,328,2.717,329,1.686,330,2.717,331,1.686,332,5.018,333,1.686,334,2.717,335,1.686,336,2.717,337,1.686,338,1.686,339,1.686,340,1.686,341,1.686,342,1.686,343,1.686,344,4.292,345,4.292,346,1.686,347,4.292,348,5.437,349,1.686,350,1.686,351,3.914,352,1.686,353,1.686,354,2.717,355,1.686,356,1.686,357,1.686,358,1.686,359,1.686,360,1.686]],["title/classes/User.html",[21,0.014,361,1.921]],["body/classes/User.html",[3,0.219,4,0.187,5,0.187,7,0.677,10,2.029,11,0.029,12,1.742,15,2.029,16,0.355,20,0.219,21,0.013,26,0.013,27,0.018,28,0.013,64,1.355,81,1.251,83,2.737,84,2.194,85,1.622,87,2.384,97,1.615,102,3.738,103,3.738,105,2.029,106,2.855,108,2.473,118,2.473,119,1.764,184,4.393,242,2.505,361,2.473,362,2.505,363,4.83,364,4.83,365,4.83,366,2.984,367,2.984,368,2.984,369,2.984]],["title/controllers/UserController.html",[0,1.003,55,1.921]],["body/controllers/UserController.html",[0,1.407,2,1.517,3,0.335,4,0.286,5,0.286,11,0.028,16,0.386,17,0.879,20,0.335,21,0.02,26,0.02,27,0.024,28,0.02,55,3.262,122,2.695,361,2.695,370,3.825,371,4.558]],["title/modules/UserModule.html",[29,1.003,45,1.921]],["body/modules/UserModule.html",[2,1.521,3,0.249,4,0.213,5,0.213,11,0.029,16,0.489,17,0.655,20,0.249,21,0.015,26,0.015,27,0.02,28,0.015,29,1.594,31,1.423,32,1.423,33,1.675,34,1.675,35,1.423,36,2.55,37,1.675,45,3.513,47,2.255,48,1.675,49,1.675,55,3.054,56,2.006,61,2.006,62,1.675,131,2.221,361,2.701,372,2.848,373,2.848,374,3.513,375,3.394,376,3.394,377,3.394,378,3.394]],["title/injectables/UserService.html",[74,1.003,374,1.921]],["body/injectables/UserService.html",[3,0.339,4,0.289,5,0.289,11,0.028,16,0.391,17,0.891,20,0.339,21,0.02,26,0.02,27,0.024,28,0.02,74,1.716,75,2.279,374,3.288,379,3.875]],["title/coverage.html",[380,3.254]],["body/coverage.html",[0,1.662,1,1.639,5,0.157,6,2.102,11,0.029,18,1.349,21,0.025,26,0.011,27,0.016,28,0.011,35,1.05,46,1.236,51,1.481,52,1.481,53,1.481,54,1.639,55,1.481,74,1.662,76,2.102,80,1.05,82,2.102,84,1.138,97,0.773,121,2.102,126,1.481,132,2.102,133,2.18,135,2.102,136,1.236,137,2.102,155,1.349,167,2.102,171,1.481,176,2.102,177,2.102,192,2.102,194,1.639,195,2.102,204,1.481,207,2.102,208,1.639,209,2.102,225,1.349,226,2.102,243,1.481,247,2.102,254,1.481,260,1.837,307,2.102,312,2.102,320,2.102,361,1.481,362,2.102,370,2.102,374,1.481,379,2.102,380,1.837,381,2.505,382,2.505,383,2.505,384,6.487,385,4.378,386,5.831,387,2.505,388,2.505,389,2.505,390,3.688,391,2.102,392,2.505,393,2.505,394,3.688,395,2.505,396,2.505,397,2.505,398,2.505,399,2.505]],["title/dependencies.html",[32,1.639,400,2.713]],["body/dependencies.html",[11,0.029,17,0.78,26,0.018,27,0.023,28,0.018,32,1.695,62,1.996,64,1.837,201,2.391,401,4.044,402,4.044,403,5.124,404,4.044,405,5.124,406,4.044,407,4.044,408,4.044,409,4.044,410,4.044,411,4.044,412,4.044,413,4.044,414,4.044,415,4.044,416,4.044,417,4.044,418,4.044,419,4.044,420,4.044]],["title/miscellaneous/enumerations.html",[421,1.775,422,3.281]],["body/miscellaneous/enumerations.html",[7,0.913,11,0.029,26,0.018,27,0.022,28,0.018,229,3.019,421,2.631,422,3.375,423,4.022,424,4.022,425,5.106,426,6.401,427,5.106,428,5.106,429,5.106,430,5.106,431,5.106,432,5.106,433,5.106]],["title/miscellaneous/functions.html",[421,1.775,434,3.281]],["body/miscellaneous/functions.html",[7,1.105,11,0.025,26,0.021,27,0.025,28,0.021,35,2.559,391,4.085,421,3.185,434,4.085,435,4.867]],["title/index.html",[7,0.616,436,2.713,437,2.713]],["body/index.html",[4,0.19,11,0.028,26,0.013,27,0.019,28,0.013,257,2.547,326,2.547,380,2.226,438,3.035,439,3.035,440,4.232,441,3.035,442,3.035,443,3.035,444,3.035,445,3.035,446,3.035,447,3.035,448,3.035,449,3.035,450,4.874,451,3.035,452,3.035,453,3.035,454,4.874,455,5.894,456,3.035,457,3.035,458,3.035,459,3.035,460,5.744,461,3.035,462,3.035,463,4.232,464,3.035,465,3.035,466,3.035,467,4.874,468,3.035,469,4.232,470,3.035,471,3.035,472,3.035,473,3.552,474,4.232,475,4.232,476,3.035,477,3.035,478,3.035,479,3.035,480,3.035,481,3.035,482,3.035,483,3.035,484,3.035,485,3.035,486,3.035,487,3.035,488,3.035,489,3.035,490,3.035,491,3.035,492,3.035,493,3.035,494,3.035,495,3.035,496,3.035,497,3.035,498,3.035]],["title/modules.html",[31,1.86]],["body/modules.html",[11,0.023,26,0.019,27,0.023,28,0.019,30,2.755,31,1.765,41,2.489,42,2.489,43,2.489,44,2.489,45,2.489,473,5.286,499,6.298,500,6.298,501,6.298]],["title/overview.html",[502,3.724]],["body/overview.html",[2,0.977,11,0.028,18,2.578,26,0.013,27,0.018,28,0.013,29,0.906,30,4.211,31,1.231,32,1.231,33,1.449,34,1.449,35,1.231,36,1.449,37,1.449,38,2.464,39,2.464,40,2.464,41,3.238,42,3.238,43,3.238,44,3.238,45,3.238,46,2.565,47,2.041,48,1.449,49,1.449,75,1.449,81,1.231,124,2.464,125,2.464,126,2.83,134,2.153,169,2.464,170,2.464,171,2.83,202,2.464,203,2.464,204,2.83,372,2.464,373,2.464,374,2.83,502,2.464,503,4.787,504,2.935,505,2.935]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["0.2.17",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":351,"title":{},"body":{"injectables/TransactionService.html":{}}}],["2",{"_index":505,"title":{},"body":{"overview.html":{}}}],["2.6.2",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":256,"title":{},"body":{"controllers/TransactionController.html":{}}}],["3.0.2",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":503,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["7.10.0",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":504,"title":{},"body":{"overview.html":{}}}],["amazing",{"_index":481,"title":{},"body":{"index.html":{}}}],["amount",{"_index":138,"title":{},"body":{"classes/Order.html":{}}}],["angular",{"_index":449,"title":{},"body":{"index.html":{}}}],["anulado",{"_index":431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apicreatedresponse",{"_index":291,"title":{},"body":{"controllers/TransactionController.html":{}}}],["apimodelproperty",{"_index":197,"title":{},"body":{"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/TransactionDTO.html":{}}}],["apimodelproperty({type",{"_index":309,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["apiresponse",{"_index":290,"title":{},"body":{"controllers/TransactionController.html":{}}}],["apiusetags",{"_index":289,"title":{},"body":{"controllers/TransactionController.html":{}}}],["apiusetags('transaction",{"_index":292,"title":{},"body":{"controllers/TransactionController.html":{}}}],["app",{"_index":458,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":446,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aprobado",{"_index":428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":321,"title":{},"body":{"injectables/TransactionService.html":{}}}],["author",{"_index":491,"title":{},"body":{"index.html":{}}}],["await",{"_index":345,"title":{},"body":{"injectables/TransactionService.html":{}}}],["backers",{"_index":482,"title":{},"body":{"index.html":{}}}],["bash",{"_index":454,"title":{},"body":{"index.html":{}}}],["bloqueado",{"_index":429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["body",{"_index":287,"title":{},"body":{"controllers/TransactionController.html":{}}}],["boolean",{"_index":221,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":501,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":499,"title":{},"body":{"modules.html":{}}}],["building",{"_index":441,"title":{},"body":{"index.html":{}}}],["catch",{"_index":347,"title":{},"body":{"injectables/TransactionService.html":{}}}],["catch((error",{"_index":359,"title":{},"body":{"injectables/TransactionService.html":{}}}],["class",{"_index":21,"title":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":81,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commercemodule",{"_index":124,"title":{},"body":{"modules/CommerceModule.html":{},"overview.html":{}}}],["cluster_commercemodule_providers",{"_index":125,"title":{},"body":{"modules/CommerceModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":169,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":170,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":202,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":203,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":315,"title":{},"body":{"modules/TransactionModule.html":{}}}],["cluster_transactionmodule_providers",{"_index":316,"title":{},"body":{"modules/TransactionModule.html":{}}}],["cluster_usermodule",{"_index":372,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":373,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmmid",{"_index":86,"title":{},"body":{"classes/Commerce.html":{}}}],["column",{"_index":119,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["column('date",{"_index":148,"title":{},"body":{"classes/Order.html":{},"classes/Transaction.html":{}}}],["column('float",{"_index":145,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{}}}],["column('int",{"_index":108,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["column('text",{"_index":184,"title":{},"body":{"classes/Product.html":{},"classes/User.html":{}}}],["column({type",{"_index":98,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Transaction.html":{}}}],["commerce",{"_index":80,"title":{"classes/Commerce.html":{}},"body":{"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"classes/Order.html":{},"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["commerce.controller",{"_index":128,"title":{},"body":{"modules/CommerceModule.html":{}}}],["commerce.entity",{"_index":163,"title":{},"body":{"classes/Order.html":{},"classes/Transaction.html":{}}}],["commerce.service",{"_index":130,"title":{},"body":{"modules/CommerceModule.html":{}}}],["commerce/commerce.controller",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["commerce/commerce.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["commercecontroller",{"_index":52,"title":{"controllers/CommerceController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"coverage.html":{}}}],["commercemodule",{"_index":41,"title":{"modules/CommerceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules.html":{},"overview.html":{}}}],["commerceservice",{"_index":126,"title":{"injectables/CommerceService.html":{}},"body":{"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"coverage.html":{},"overview.html":{}}}],["connection",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":353,"title":{},"body":{"injectables/TransactionService.html":{}}}],["constructor",{"_index":324,"title":{},"body":{"injectables/TransactionService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/TransactionController.html":{}}}],["constructor(transactionmodel",{"_index":325,"title":{},"body":{"injectables/TransactionService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CommerceController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CommerceController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('commerce",{"_index":123,"title":{},"body":{"controllers/CommerceController.html":{}}}],["controller('order",{"_index":168,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":193,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('transaction",{"_index":293,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controller('user",{"_index":371,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":380,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":258,"title":{},"body":{"controllers/TransactionController.html":{}}}],["created",{"_index":264,"title":{},"body":{"controllers/TransactionController.html":{}}}],["createtransaction",{"_index":248,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["createtransaction(@body",{"_index":298,"title":{},"body":{"controllers/TransactionController.html":{}}}],["createtransaction(transaction",{"_index":253,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["currency",{"_index":139,"title":{},"body":{"classes/Order.html":{},"classes/PurchaseDTO.html":{}}}],["date",{"_index":140,"title":{},"body":{"classes/Order.html":{},"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"classes/User.html":{}}}],["default",{"_index":239,"title":{},"body":{"classes/Transaction.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"injectables/TransactionService.html":{},"classes/User.html":{}}}],["delete",{"_index":270,"title":{},"body":{"controllers/TransactionController.html":{}}}],["delete(':id",{"_index":304,"title":{},"body":{"controllers/TransactionController.html":{}}}],["delete(':id')@apiresponse({status",{"_index":269,"title":{},"body":{"controllers/TransactionController.html":{}}}],["deleteresult",{"_index":340,"title":{},"body":{"injectables/TransactionService.html":{}}}],["deletetransaction",{"_index":249,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["deletetransaction(@param('id",{"_index":305,"title":{},"body":{"controllers/TransactionController.html":{}}}],["deletetransaction(id",{"_index":330,"title":{},"body":{"injectables/TransactionService.html":{}}}],["deletetransaction(id_transaction",{"_index":268,"title":{},"body":{"controllers/TransactionController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":257,"title":{},"body":{"controllers/TransactionController.html":{},"index.html":{}}}],["development",{"_index":459,"title":{},"body":{"index.html":{}}}],["disputa",{"_index":433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["documentation",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["dto/enum",{"_index":245,"title":{},"body":{"classes/Transaction.html":{}}}],["dto/transaction",{"_index":284,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["e2e",{"_index":470,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":442,"title":{},"body":{"index.html":{}}}],["email",{"_index":210,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["entity",{"_index":118,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["entityi",{"_index":84,"title":{"interfaces/EntityI.html":{}},"body":{"classes/Commerce.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{},"classes/User.html":{},"coverage.html":{}}}],["enum",{"_index":238,"title":{},"body":{"classes/Transaction.html":{}}}],["enumerations",{"_index":422,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":348,"title":{},"body":{"injectables/TransactionService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["external_reference",{"_index":141,"title":{},"body":{"classes/Order.html":{},"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["false",{"_index":103,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findalltransaction",{"_index":322,"title":{},"body":{"injectables/TransactionService.html":{}}}],["findtransaction",{"_index":323,"title":{},"body":{"injectables/TransactionService.html":{}}}],["findtransaction(id",{"_index":334,"title":{},"body":{"injectables/TransactionService.html":{}}}],["firstname",{"_index":212,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["framework",{"_index":440,"title":{},"body":{"index.html":{}}}],["function",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":434,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":295,"title":{},"body":{"controllers/TransactionController.html":{}}}],["get(':id')@apiresponse({status",{"_index":277,"title":{},"body":{"controllers/TransactionController.html":{}}}],["get()@apiresponse({status",{"_index":273,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getalltransaction",{"_index":250,"title":{},"body":{"controllers/TransactionController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":436,"title":{"index.html":{}},"body":{}}],["gettransaction",{"_index":251,"title":{},"body":{"controllers/TransactionController.html":{}}}],["gettransaction(@param('id",{"_index":296,"title":{},"body":{"controllers/TransactionController.html":{}}}],["gettransaction(id_transaction",{"_index":276,"title":{},"body":{"controllers/TransactionController.html":{}}}],["grow",{"_index":478,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":447,"title":{},"body":{"index.html":{}}}],["hello",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":488,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":495,"title":{},"body":{"index.html":{}}}],["id",{"_index":87,"title":{},"body":{"classes/Commerce.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/User.html":{}}}],["id_color",{"_index":88,"title":{},"body":{"classes/Commerce.html":{}}}],["id_commerce",{"_index":142,"title":{},"body":{"classes/Order.html":{},"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["id_commerce_fee",{"_index":227,"title":{},"body":{"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["id_customer",{"_index":143,"title":{},"body":{"classes/Order.html":{}}}],["id_fee",{"_index":89,"title":{},"body":{"classes/Commerce.html":{}}}],["id_orden",{"_index":313,"title":{},"body":{"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["id_order",{"_index":178,"title":{},"body":{"classes/Product.html":{},"classes/Transaction.html":{}}}],["id_platform",{"_index":90,"title":{},"body":{"classes/Commerce.html":{}}}],["id_platform_commerce",{"_index":228,"title":{},"body":{"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["id_privilegio",{"_index":363,"title":{},"body":{"classes/User.html":{}}}],["id_product",{"_index":144,"title":{},"body":{"classes/Order.html":{}}}],["id_route",{"_index":91,"title":{},"body":{"classes/Commerce.html":{}}}],["id_transaction",{"_index":272,"title":{},"body":{"controllers/TransactionController.html":{}}}],["id_user",{"_index":92,"title":{},"body":{"classes/Commerce.html":{}}}],["identifier",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":83,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":74,"title":{"injectables/AppService.html":{},"injectables/CommerceService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CommerceService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"injectables/CommerceService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":339,"title":{},"body":{"injectables/TransactionService.html":{}}}],["injectrepository(transaction",{"_index":342,"title":{},"body":{"injectables/TransactionService.html":{}}}],["insert",{"_index":350,"title":{},"body":{"injectables/TransactionService.html":{}}}],["inspired",{"_index":448,"title":{},"body":{"index.html":{}}}],["install",{"_index":456,"title":{},"body":{"index.html":{}}}],["installation",{"_index":453,"title":{},"body":{"index.html":{}}}],["interface",{"_index":133,"title":{"interfaces/EntityI.html":{},"interfaces/TransactionI.html":{}},"body":{"interfaces/EntityI.html":{},"interfaces/TransactionI.html":{},"coverage.html":{}}}],["interface/entity",{"_index":242,"title":{},"body":{"classes/Transaction.html":{},"classes/User.html":{}}}],["interface/transaction.interface",{"_index":244,"title":{},"body":{"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["interfaces",{"_index":134,"title":{},"body":{"interfaces/EntityI.html":{},"interfaces/TransactionI.html":{},"overview.html":{}}}],["join",{"_index":484,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":161,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{}}}],["kamil",{"_index":492,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":498,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":475,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":188,"title":{},"body":{"classes/Product.html":{}}}],["manytoone(type",{"_index":190,"title":{},"body":{"classes/Product.html":{}}}],["manytoone(undefined",{"_index":182,"title":{},"body":{"classes/Product.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["miscellaneous",{"_index":421,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":474,"title":{},"body":{"index.html":{}}}],["mode",{"_index":463,"title":{},"body":{"index.html":{}}}],["models/commerce.entity",{"_index":129,"title":{},"body":{"modules/CommerceModule.html":{},"interfaces/TransactionI.html":{}}}],["models/transaction.entity",{"_index":318,"title":{},"body":{"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":487,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":493,"title":{},"body":{"index.html":{}}}],["name",{"_index":93,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["nest",{"_index":450,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":497,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":201,"title":{},"body":{"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["new",{"_index":260,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["newtransaction",{"_index":354,"title":{},"body":{"injectables/TransactionService.html":{}}}],["node.js",{"_index":439,"title":{},"body":{"index.html":{}}}],["npm",{"_index":455,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":102,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["number",{"_index":105,"title":{},"body":{"classes/Commerce.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"classes/User.html":{}}}],["number,@body",{"_index":302,"title":{},"body":{"controllers/TransactionController.html":{}}}],["object",{"_index":267,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["onetomany",{"_index":162,"title":{},"body":{"classes/Order.html":{}}}],["onetomany(type",{"_index":165,"title":{},"body":{"classes/Order.html":{}}}],["onetomany(undefined",{"_index":156,"title":{},"body":{"classes/Order.html":{}}}],["onetoone",{"_index":160,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{}}}],["onetoone(type",{"_index":164,"title":{},"body":{"classes/Order.html":{},"classes/Transaction.html":{}}}],["onetoone(undefined)@joincolumn({name",{"_index":152,"title":{},"body":{"classes/Order.html":{},"classes/Transaction.html":{}}}],["open",{"_index":476,"title":{},"body":{"index.html":{}}}],["optional",{"_index":211,"title":{},"body":{"classes/PurchaseDTO.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["order",{"_index":136,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/Product.html":{},"classes/Transaction.html":{},"coverage.html":{}}}],["order.controller",{"_index":175,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.entity",{"_index":189,"title":{},"body":{"classes/Product.html":{},"classes/Transaction.html":{}}}],["order.id_product",{"_index":191,"title":{},"body":{"classes/Product.html":{}}}],["order.service",{"_index":173,"title":{},"body":{"modules/OrderModule.html":{}}}],["order/order.controller",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["order/order.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":53,"title":{"controllers/OrderController.html":{}},"body":{"modules/AppModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":42,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":171,"title":{"injectables/OrderService.html":{}},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":502,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":400,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":288,"title":{},"body":{"controllers/TransactionController.html":{}}}],["parameters",{"_index":266,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["password",{"_index":364,"title":{},"body":{"classes/User.html":{}}}],["pendiente",{"_index":432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pg",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":213,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["please",{"_index":485,"title":{},"body":{"index.html":{}}}],["post",{"_index":285,"title":{},"body":{"controllers/TransactionController.html":{}}}],["post()@apiresponse({status",{"_index":255,"title":{},"body":{"controllers/TransactionController.html":{}}}],["preaprobado",{"_index":427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":122,"title":{},"body":{"controllers/CommerceController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":106,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["private",{"_index":343,"title":{},"body":{"injectables/TransactionService.html":{}}}],["private_key",{"_index":94,"title":{},"body":{"classes/Commerce.html":{}}}],["procesando",{"_index":425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["product",{"_index":155,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/TransactionDTO.html":{},"coverage.html":{}}}],["product.entity",{"_index":159,"title":{},"body":{"classes/Order.html":{}}}],["product.id_order",{"_index":166,"title":{},"body":{"classes/Order.html":{}}}],["product.service",{"_index":206,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/product.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["product/product.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":54,"title":{"controllers/ProductController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["productdto",{"_index":194,"title":{"classes/ProductDTO.html":{}},"body":{"classes/ProductDTO.html":{},"classes/TransactionDTO.html":{},"coverage.html":{}}}],["production",{"_index":465,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":43,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productservice",{"_index":204,"title":{"injectables/ProductService.html":{}},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":438,"title":{},"body":{"index.html":{}}}],["project",{"_index":477,"title":{},"body":{"index.html":{}}}],["promise",{"_index":332,"title":{},"body":{"injectables/TransactionService.html":{}}}],["properties",{"_index":85,"title":{},"body":{"classes/Commerce.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"classes/User.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public_key",{"_index":95,"title":{},"body":{"classes/Commerce.html":{}}}],["purchase",{"_index":308,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["purchasedto",{"_index":208,"title":{"classes/PurchaseDTO.html":{}},"body":{"classes/PurchaseDTO.html":{},"classes/TransactionDTO.html":{},"coverage.html":{}}}],["put",{"_index":286,"title":{},"body":{"controllers/TransactionController.html":{}}}],["put(':id",{"_index":300,"title":{},"body":{"controllers/TransactionController.html":{}}}],["put(':id')@apiresponse({status",{"_index":281,"title":{},"body":{"controllers/TransactionController.html":{}}}],["quantity",{"_index":179,"title":{},"body":{"classes/Product.html":{},"classes/ProductDTO.html":{}}}],["read",{"_index":486,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"injectables/TransactionService.html":{}}}],["rechazado",{"_index":430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["record",{"_index":262,"title":{},"body":{"controllers/TransactionController.html":{}}}],["recurring",{"_index":214,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["reference",{"_index":215,"title":{},"body":{"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["reflect",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":326,"title":{},"body":{"injectables/TransactionService.html":{},"index.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":358,"title":{},"body":{"injectables/TransactionService.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["rimraf",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":460,"title":{},"body":{"index.html":{}}}],["running",{"_index":457,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":443,"title":{},"body":{"index.html":{}}}],["secondname",{"_index":216,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["server",{"_index":444,"title":{},"body":{"index.html":{}}}],["side",{"_index":445,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"controllers/CommerceController.html":{},"modules/CommerceModule.html":{},"injectables/CommerceService.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDTO.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":480,"title":{},"body":{"index.html":{}}}],["src/.../enum.ts",{"_index":423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["src/commerce/commerce.controller.ts",{"_index":121,"title":{},"body":{"controllers/CommerceController.html":{},"coverage.html":{}}}],["src/commerce/commerce.module.ts",{"_index":127,"title":{},"body":{"modules/CommerceModule.html":{}}}],["src/commerce/commerce.service.ts",{"_index":132,"title":{},"body":{"injectables/CommerceService.html":{},"coverage.html":{}}}],["src/dto/enum",{"_index":314,"title":{},"body":{"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["src/dto/enum.ts",{"_index":424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/dto/product.ts",{"_index":195,"title":{},"body":{"classes/ProductDTO.html":{},"coverage.html":{}}}],["src/dto/product.ts:11",{"_index":200,"title":{},"body":{"classes/ProductDTO.html":{}}}],["src/dto/product.ts:5",{"_index":199,"title":{},"body":{"classes/ProductDTO.html":{}}}],["src/dto/product.ts:8",{"_index":198,"title":{},"body":{"classes/ProductDTO.html":{}}}],["src/dto/purchase.ts",{"_index":209,"title":{},"body":{"classes/PurchaseDTO.html":{},"coverage.html":{}}}],["src/dto/purchase.ts:11",{"_index":218,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["src/dto/purchase.ts:14",{"_index":220,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["src/dto/purchase.ts:17",{"_index":222,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["src/dto/purchase.ts:20",{"_index":217,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["src/dto/purchase.ts:23",{"_index":223,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["src/dto/purchase.ts:5",{"_index":219,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["src/dto/purchase.ts:8",{"_index":224,"title":{},"body":{"classes/PurchaseDTO.html":{}}}],["src/dto/transaction.ts",{"_index":307,"title":{},"body":{"classes/TransactionDTO.html":{},"coverage.html":{}}}],["src/dto/transaction.ts:11",{"_index":310,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["src/dto/transaction.ts:8",{"_index":311,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["src/interface/entity",{"_index":120,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{}}}],["src/interface/entity.ts",{"_index":135,"title":{},"body":{"interfaces/EntityI.html":{},"coverage.html":{}}}],["src/interface/transaction.interface.ts",{"_index":312,"title":{},"body":{"interfaces/TransactionI.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/commerce.entity",{"_index":341,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/models/commerce.entity.ts",{"_index":82,"title":{},"body":{"classes/Commerce.html":{},"coverage.html":{}}}],["src/models/commerce.entity.ts:11",{"_index":104,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:14",{"_index":117,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:17",{"_index":114,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:20",{"_index":116,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:23",{"_index":115,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:26",{"_index":110,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:29",{"_index":109,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:32",{"_index":112,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:35",{"_index":111,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:38",{"_index":113,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/commerce.entity.ts:8",{"_index":107,"title":{},"body":{"classes/Commerce.html":{}}}],["src/models/order.entity",{"_index":174,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/models/order.entity.ts",{"_index":137,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/models/order.entity.ts:12",{"_index":149,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.entity.ts:15",{"_index":146,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.entity.ts:18",{"_index":147,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.entity.ts:21",{"_index":150,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.entity.ts:25",{"_index":153,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.entity.ts:28",{"_index":154,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.entity.ts:32",{"_index":158,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.entity.ts:9",{"_index":151,"title":{},"body":{"classes/Order.html":{}}}],["src/models/product.entity.ts",{"_index":177,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/models/product.entity.ts:11",{"_index":185,"title":{},"body":{"classes/Product.html":{}}}],["src/models/product.entity.ts:14",{"_index":186,"title":{},"body":{"classes/Product.html":{}}}],["src/models/product.entity.ts:17",{"_index":187,"title":{},"body":{"classes/Product.html":{}}}],["src/models/product.entity.ts:21",{"_index":183,"title":{},"body":{"classes/Product.html":{}}}],["src/models/product.entity.ts:8",{"_index":181,"title":{},"body":{"classes/Product.html":{}}}],["src/models/transaction.entity.ts",{"_index":226,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/models/transaction.entity.ts:11",{"_index":232,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:14",{"_index":241,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:17",{"_index":237,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:20",{"_index":231,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:23",{"_index":230,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:26",{"_index":236,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:29",{"_index":234,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:33",{"_index":235,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:37",{"_index":233,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/user.entity",{"_index":377,"title":{},"body":{"modules/UserModule.html":{}}}],["src/models/user.entity.ts",{"_index":362,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/models/user.entity.ts:11",{"_index":369,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.entity.ts:14",{"_index":368,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.entity.ts:17",{"_index":367,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.entity.ts:8",{"_index":366,"title":{},"body":{"classes/User.html":{}}}],["src/order/order.controller.ts",{"_index":167,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.module.ts",{"_index":172,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":176,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/product/product.controller.ts",{"_index":192,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.module.ts",{"_index":205,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":207,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/transaction/transaction.controller.ts",{"_index":247,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["src/transaction/transaction.controller.ts:13",{"_index":275,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:19",{"_index":278,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:26",{"_index":265,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:32",{"_index":282,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:38",{"_index":271,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.module.ts",{"_index":317,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/transaction/transaction.service.ts",{"_index":320,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/transaction/transaction.service.ts:11",{"_index":327,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:17",{"_index":333,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:25",{"_index":335,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:33",{"_index":329,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:53",{"_index":337,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:63",{"_index":331,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/user/user.controller.ts",{"_index":370,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":375,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":379,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["start",{"_index":461,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":464,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":466,"title":{},"body":{"index.html":{}}}],["started",{"_index":437,"title":{"index.html":{}},"body":{}}],["starter",{"_index":452,"title":{},"body":{"index.html":{}}}],["statements",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":229,"title":{},"body":{"classes/Transaction.html":{},"controllers/TransactionController.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["status.aprobado",{"_index":352,"title":{},"body":{"injectables/TransactionService.html":{}}}],["status.pendiente",{"_index":246,"title":{},"body":{"classes/Transaction.html":{}}}],["stay",{"_index":489,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"classes/User.html":{}}}],["success",{"_index":259,"title":{},"body":{"controllers/TransactionController.html":{}}}],["successfully",{"_index":263,"title":{},"body":{"controllers/TransactionController.html":{}}}],["support",{"_index":473,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":500,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["tax_id",{"_index":96,"title":{},"body":{"classes/Commerce.html":{}}}],["test",{"_index":467,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":472,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":471,"title":{},"body":{"index.html":{}}}],["tests",{"_index":469,"title":{},"body":{"index.html":{}}}],["text",{"_index":99,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Transaction.html":{}}}],["thanks",{"_index":479,"title":{},"body":{"index.html":{}}}],["then((response",{"_index":357,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.transactionmodel.delete",{"_index":360,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.find",{"_index":346,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.findone",{"_index":349,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.save(insert",{"_index":355,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.update",{"_index":356,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionservice.createtransaction(transaction",{"_index":299,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.deletetransaction(id_transaction",{"_index":306,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.findalltransaction",{"_index":294,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.findtransaction(id_transaction",{"_index":297,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.updatetransaction(id_transaction",{"_index":303,"title":{},"body":{"controllers/TransactionController.html":{}}}],["touch",{"_index":490,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":225,"title":{"classes/Transaction.html":{}},"body":{"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transaction'})@apicreatedresponse({description",{"_index":261,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transaction.controller",{"_index":319,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.service",{"_index":283,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{}}}],["transaction/transaction.controller",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["transaction/transaction.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["transaction/transaction.service",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["transactioncontroller",{"_index":51,"title":{"controllers/TransactionController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactiondto",{"_index":254,"title":{"classes/TransactionDTO.html":{}},"body":{"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transactioni",{"_index":243,"title":{"interfaces/TransactionI.html":{}},"body":{"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transactionmodel",{"_index":328,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactionmodule",{"_index":44,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactions",{"_index":274,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transactionservice",{"_index":46,"title":{"injectables/TransactionService.html":{}},"body":{"modules/AppModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":101,"title":{},"body":{"classes/Commerce.html":{},"classes/Order.html":{},"classes/Transaction.html":{}}}],["try",{"_index":344,"title":{},"body":{"injectables/TransactionService.html":{}}}],["twitter",{"_index":496,"title":{},"body":{"index.html":{}}}],["type",{"_index":97,"title":{},"body":{"classes/Commerce.html":{},"interfaces/EntityI.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/ProductDTO.html":{},"classes/PurchaseDTO.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"coverage.html":{}}}],["typeorm",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/Commerce.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":131,"title":{},"body":{"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":451,"title":{},"body":{"index.html":{}}}],["ui",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":240,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{}}}],["undefined)@joincolumn({name",{"_index":157,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{}}}],["unique",{"_index":100,"title":{},"body":{"classes/Commerce.html":{}}}],["unit",{"_index":468,"title":{},"body":{"index.html":{}}}],["unit_price",{"_index":180,"title":{},"body":{"classes/Product.html":{}}}],["unitprice",{"_index":196,"title":{},"body":{"classes/ProductDTO.html":{}}}],["update",{"_index":280,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["updatetransaction",{"_index":252,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["updatetransaction(@param('id",{"_index":301,"title":{},"body":{"controllers/TransactionController.html":{}}}],["updatetransaction(id",{"_index":336,"title":{},"body":{"injectables/TransactionService.html":{}}}],["updatetransaction(id_transaction",{"_index":279,"title":{},"body":{"controllers/TransactionController.html":{}}}],["user",{"_index":361,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["user.controller",{"_index":378,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":376,"title":{},"body":{"modules/UserModule.html":{}}}],["user/user.controller",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":55,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":45,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":365,"title":{},"body":{"classes/User.html":{}}}],["userservice",{"_index":374,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":462,"title":{},"body":{"index.html":{}}}],["website",{"_index":494,"title":{},"body":{"index.html":{}}}],["world",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":338,"title":{},"body":{"injectables/TransactionService.html":{}}}],["you'd",{"_index":483,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CommerceModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCommerceModule\n\nCommerceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommerceModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nAppModule -->\n\nTransactionService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            TransactionController\n                        \n                        \n                            CommerceController\n                        \n                        \n                            OrderController\n                        \n                        \n                            ProductController\n                        \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommerceModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TransactionModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TransactionModule } from './transaction/transaction.module';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TransactionController } from './transaction/transaction.controller';\nimport { TransactionService } from './transaction/transaction.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\nimport { CommerceController } from './commerce/commerce.controller';\nimport { CommerceModule } from './commerce/commerce.module';\nimport { OrderController } from './order/order.controller';\nimport { OrderModule } from './order/order.module';\nimport { ProductController } from './product/product.controller';\nimport { ProductModule } from './product/product.module';\nimport { UserController } from './user/user.controller';\nimport { UserModule } from './user/user.module';\n\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(),\n    TransactionModule,\n    CommerceModule,\n    OrderModule,\n    ProductModule,\n    UserModule\n  ],\n  controllers: [AppController, TransactionController, CommerceController, OrderController, ProductController, UserController],\n  providers: [AppService, TransactionService],\n})\nexport class AppModule {\n  constructor(private readonly connection: Connection){}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Commerce.html":{"url":"classes/Commerce.html","title":"class - Commerce","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Commerce\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/commerce.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            EntityI\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cmmid\n                            \n                            \n                                id\n                            \n                            \n                                id_color\n                            \n                            \n                                id_fee\n                            \n                            \n                                id_platform\n                            \n                            \n                                id_route\n                            \n                            \n                                id_user\n                            \n                            \n                                name\n                            \n                            \n                                private_key\n                            \n                            \n                                public_key\n                            \n                            \n                                tax_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cmmid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_fee\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            private_key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            public_key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tax_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/commerce.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\nimport { EntityI } from \"src/interface/Entity\";\n\n\n@Entity()\nexport class Commerce implements EntityI {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ type: 'text', unique: true, nullable: false })\n    cmmid: string\n\n    @Column({ type: 'text', unique: true, nullable: false })\n    tax_id: string;\n\n    @Column({ type: 'text', unique: true, nullable: false })\n    name: string;\n\n    @Column({ type: 'text', unique: true, nullable: false })\n    public_key: string;\n\n    @Column({ type: 'text', unique: true, nullable: false })\n    private_key: string;\n\n    @Column('int', { nullable: true })\n    id_fee: number;\n\n    @Column('int', { nullable: true })\n    id_color: number;\n\n    @Column('int', { nullable: true })\n    id_route: number;\n\n    @Column('int', { nullable: true })\n    id_platform: number;\n\n    @Column('int', { nullable: true })\n    id_user: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommerceController.html":{"url":"controllers/CommerceController.html","title":"controller - CommerceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommerceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commerce/commerce.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                commerce\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('commerce')\nexport class CommerceController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommerceModule.html":{"url":"modules/CommerceModule.html","title":"module - CommerceModule","body":"\n                   \n\n\n\n\n    Modules\n    CommerceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommerceModule\n\n\n\ncluster_CommerceModule_providers\n\n\n\n\nCommerceService\n\nCommerceService\n\n\n\nCommerceModule\n\nCommerceModule\n\nCommerceModule -->\n\nCommerceService->CommerceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/commerce/commerce.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommerceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CommerceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommerceController } from './commerce.controller';\nimport { Commerce } from './../models/commerce.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { CommerceService } from './commerce.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Commerce\n    ])\n  ],\n  providers: [CommerceService],\n  controllers: [CommerceController]\n})\nexport class CommerceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommerceService.html":{"url":"injectables/CommerceService.html","title":"injectable - CommerceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommerceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commerce/commerce.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommerceService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityI.html":{"url":"interfaces/EntityI.html","title":"interface - EntityI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/Entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EntityI {\n    id: number;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/order.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            EntityI\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                date\n                            \n                            \n                                external_reference\n                            \n                            \n                                id\n                            \n                            \n                                id_commerce\n                            \n                            \n                                id_customer\n                            \n                            \n                                id_product\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('float')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/order.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/order.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('date', {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/order.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            external_reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/order.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/order.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_commerce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn({name: 'id_commerce'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/order.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_customer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/order.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Product[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)@JoinColumn({name: 'id_product'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/order.entity.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from './product.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToOne, JoinColumn, OneToMany } from \"typeorm\";\nimport { EntityI } from \"src/interface/Entity\";\nimport { Commerce } from \"./commerce.entity\";\n\n@Entity()\nexport class Order implements EntityI {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column('date', { nullable: false })\n    date: Date;\n\n    @Column('float')\n    amount: number;\n\n    @Column({ type: 'text', nullable: true })\n    currency: string;\n\n    @Column({ type: 'text', nullable: true })\n    external_reference: number;\n\n    @OneToOne(type => Commerce)\n    @JoinColumn({ name: 'id_commerce'})\n    id_commerce: number;\n\n    @Column('int', { nullable: true })\n    id_customer: number;\n\n    @OneToMany(type => Product, product => product.id_order)\n    @JoinColumn({ name: 'id_product' })\n    id_product: Product[];\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('order')\nexport class OrderController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nOrderService\n\nOrderService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { Order } from 'src/models/order.entity';\nimport { OrderController } from './order.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Order\n    ])\n  ],\n  providers: [OrderService],\n  controllers: [OrderController]\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class OrderService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/product.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            EntityI\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                id_order\n                            \n                            \n                                name\n                            \n                            \n                                quantity\n                            \n                            \n                                unit_price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/product.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)@JoinColumn({name: 'id_order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/product.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/product.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/product.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unit_price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('float')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/product.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, JoinColumn, ManyToOne } from \"typeorm\";\nimport { EntityI } from \"src/interface/Entity\";\nimport { Order } from \"./order.entity\";\n\n@Entity()\nexport class Product implements EntityI {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column('text')\n    name: string;\n\n    @Column('int')\n    quantity: number;\n\n    @Column('float')\n    unit_price: number;\n\n    @ManyToOne(type => Order, order => order.id_product)\n    @JoinColumn({ name: 'id_order' })\n    id_order: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('product')\nexport class ProductController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDTO.html":{"url":"classes/ProductDTO.html","title":"class - ProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/product.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                quantity\n                            \n                            \n                                    Readonly\n                                unitPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/product.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/product.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unitPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/product.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\n\nexport class ProductDTO {\n    @ApiModelProperty()\n    readonly quantity: number;\n\n    @ApiModelProperty()\n    readonly name: string;\n\n    @ApiModelProperty()\n    readonly unitPrice: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService\n\nProductService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\n\n@Module({\n  providers: [ProductService]\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ProductService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PurchaseDTO.html":{"url":"classes/PurchaseDTO.html","title":"class - PurchaseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PurchaseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/purchase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currency\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                firstName\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                recurring\n                            \n                            \n                                    Readonly\n                                reference\n                            \n                            \n                                    Readonly\n                                    Optional\n                                secondName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/purchase.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/purchase.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/purchase.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/purchase.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            recurring\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/purchase.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/purchase.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            secondName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/purchase.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\n\nexport class PurchaseDTO {\n    @ApiModelProperty()\n    readonly firstName?: string;\n\n    @ApiModelProperty()\n    readonly secondName?: string;\n\n    @ApiModelProperty()\n    readonly email: string;\n\n    @ApiModelProperty()\n    readonly phoneNumber: string;\n\n    @ApiModelProperty()\n    readonly recurring: boolean;\n\n    @ApiModelProperty()\n    readonly currency: string;\n\n    @ApiModelProperty()\n    readonly reference: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/transaction.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                external_reference\n                            \n                            \n                                id\n                            \n                            \n                                id_commerce\n                            \n                            \n                                id_commerce_fee\n                            \n                            \n                                id_order\n                            \n                            \n                                id_platform_commerce\n                            \n                            \n                                reference\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('date', {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            external_reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_commerce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn({name: 'id_commerce'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_commerce_fee\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn({name: 'id_order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_platform_commerce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Status\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: Status, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Commerce } from './commerce.entity';\nimport { EntityI } from './../interface/Entity';\nimport { TransactionI } from './../interface/transaction.interface';\nimport { Status } from './../dto/Enum';\nimport { Entity, Column, PrimaryGeneratedColumn, OneToOne, JoinColumn } from 'typeorm';\nimport { Order } from './order.entity';\n\n@Entity()\nexport class Transaction{\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ type: 'enum', enum: Status, default: Status.pendiente })\n    status: Status;\n\n    @Column({ type: 'text', nullable: true })\n    reference: string;\n\n    @Column({ type: 'text', nullable: true })\n    external_reference: string;\n\n    @Column('date', { nullable: false })\n    date: Date;\n\n    @Column('int', { nullable: true })\n    id_platform_commerce: number;\n\n    @Column('int', { nullable: true })\n    id_commerce_fee: number;\n\n    @OneToOne(type => Order)\n    @JoinColumn({ name: 'id_order' })\n    id_order: number;\n\n    @OneToOne(type => Commerce)\n    @JoinColumn({ name: 'id_commerce'})\n    id_commerce: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transaction\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTransaction\n                            \n                            \n                                deleteTransaction\n                            \n                            \n                                getAllTransaction\n                            \n                            \n                                getTransaction\n                            \n                            \n                                updateTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTransaction\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTransaction(transaction: TransactionDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 200, description: 'Create success new transaction'})@ApiCreatedResponse({description: 'The record has been successfully created.'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                TransactionDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTransaction\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTransaction(id_transaction: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiResponse({status: 200, description: 'Delete success transaction'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_transaction\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllTransaction\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllTransaction()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'Get all transactions'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransaction\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransaction(id_transaction: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiResponse({status: 200, description: 'Get a transaction'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_transaction\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTransaction\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTransaction(id_transaction: number, update: TransactionDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiResponse({status: 200, description: 'Update success transaction'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_transaction\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    update\n                                    \n                                                TransactionDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { TransactionService } from './transaction.service';\nimport { TransactionDTO } from '../dto/transaction';\nimport { Controller, Get, Post, Put, Delete, Body, Param } from '@nestjs/common';\nimport { ApiUseTags, ApiResponse, ApiCreatedResponse } from '@nestjs/swagger';\n\n@ApiUseTags('transaction')\n@Controller('transaction')\nexport class TransactionController {\n    constructor(private readonly transactionService: TransactionService){}\n\n    @Get()\n    @ApiResponse({ status: 200, description: 'Get all transactions'})\n    getAllTransaction(): Object {\n        return this.transactionService.findAllTransaction();\n    }\n\n    @Get(':id')\n    @ApiResponse({ status: 200, description: 'Get a transaction'})\n    getTransaction(@Param('id') id_transaction: number): Object {\n        return this.transactionService.findTransaction(id_transaction);\n    }\n\n    @Post()\n    @ApiResponse({ status: 200, description: 'Create success new transaction'})\n    @ApiCreatedResponse({ description: 'The record has been successfully created.'})\n    createTransaction(@Body() transaction: TransactionDTO): Object {\n        return this.transactionService.createTransaction(transaction);\n    }\n\n    @Put(':id')\n    @ApiResponse({ status: 200, description: 'Update success transaction'})\n    updateTransaction(@Param('id') id_transaction: number,@Body() update: TransactionDTO): Object {\n        return this.transactionService.updateTransaction(id_transaction, update);\n    }\n\n    @Delete(':id')\n    @ApiResponse({ status: 200, description: 'Delete success transaction'})\n    deleteTransaction(@Param('id') id_transaction: number): Object {\n        return this.transactionService.deleteTransaction(id_transaction);\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionDTO.html":{"url":"classes/TransactionDTO.html","title":"class - TransactionDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/transaction.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                product\n                            \n                            \n                                    Readonly\n                                purchase\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProductDTO[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/transaction.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            purchase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PurchaseDTO\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/transaction.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { PurchaseDTO } from './purchase';\nimport { ProductDTO } from './product';\n\nexport class TransactionDTO {\n\n    @ApiModelProperty()\n    readonly purchase: PurchaseDTO;\n\n    @ApiModelProperty({ type: [ProductDTO]})\n    readonly product: ProductDTO[];\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionI.html":{"url":"interfaces/TransactionI.html","title":"interface - TransactionI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransactionI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/transaction.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        external_reference\n                                \n                                \n                                        id_commerce\n                                \n                                \n                                        id_commerce_fee\n                                \n                                \n                                        id_orden\n                                \n                                \n                                        id_platform_commerce\n                                \n                                \n                                        reference\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        external_reference\n                                    \n                                \n                                \n                                    \n                                        external_reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_commerce\n                                    \n                                \n                                \n                                    \n                                        id_commerce:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_commerce_fee\n                                    \n                                \n                                \n                                    \n                                        id_commerce_fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_orden\n                                    \n                                \n                                \n                                    \n                                        id_orden:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_platform_commerce\n                                    \n                                \n                                \n                                    \n                                        id_platform_commerce:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Commerce } from './../models/commerce.entity';\nimport { Status } from 'src/dto/Enum';\n\nexport interface TransactionI {\n    status: Status;\n\n    reference: string;\n\n    external_reference: string;\n\n    date: Date;\n\n    id_platform_commerce: number;\n\n    id_commerce_fee: number;\n\n    id_orden: number;\n\n    id_commerce: number;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nTransactionService\n\nTransactionService\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transaction/transaction.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Transaction } from './../models/transaction.entity';\nimport { TransactionController } from './transaction.controller';\nimport { TransactionService } from './transaction.service';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([\n            Transaction\n        ])\n    ],\n    providers: [TransactionService],\n    controllers: [TransactionController]\n})\nexport class TransactionModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTransaction\n                            \n                            \n                                    Async\n                                deleteTransaction\n                            \n                            \n                                    Async\n                                findAllTransaction\n                            \n                            \n                                    Async\n                                findTransaction\n                            \n                            \n                                    Async\n                                updateTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionModel: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/transaction/transaction.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionModel\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransaction(transaction: TransactionDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                TransactionDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTransaction(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findTransaction(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTransaction(id: number, update?: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    update\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TransactionDTO } from './../dto/transaction';\nimport { Status } from 'src/dto/Enum';\nimport { Transaction } from './../models/transaction.entity';\nimport { TransactionI } from '../interface/transaction.interface';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, DeleteResult } from 'typeorm';\nimport { Commerce } from 'src/models/commerce.entity';\n\n@Injectable()\nexport class TransactionService {\n    constructor(\n        @InjectRepository(Transaction) \n        private readonly transactionModel: Repository\n    ){}\n\n    async findAllTransaction(): Promise{\n        try {\n            return await this.transactionModel.find();\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async findTransaction(id: number): Promise{\n        try {\n            return await this.transactionModel.findOne({ id })\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async createTransaction(transaction: TransactionDTO){\n        try {\n            \n            let insert: TransactionI = {\n                reference: '',\n                external_reference: '',\n                id_commerce: 1,\n                id_commerce_fee: 1,\n                id_orden: 1,\n                id_platform_commerce: 1,\n                status: Status.aprobado,\n                date: new Date()\n            };\n            const newTransaction = await this.transactionModel.save(insert);\n            return newTransaction;\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async updateTransaction(id: number, update?: Object): Promise{\n        try {\n            return await this.transactionModel.update({ id }, update)\n            .then((response) => response)\n            .catch((error) => error);\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async deleteTransaction(id: number): Promise{\n        try {\n            return await this.transactionModel.delete({ id });\n        } catch (error) {\n            return error;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            EntityI\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                id_privilegio\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id_privilegio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text', {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text', {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityI } from './../interface/Entity';\nimport { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n\n@Entity()\nexport class User implements EntityI {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column('text', { nullable: false })\n    username: string;\n\n    @Column('text', { nullable: false })\n    password: string;\n\n    @Column('int', { nullable: false })\n    id_privilegio: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('user')\nexport class UserController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { User } from 'src/models/user.entity';\nimport { UserController } from './user.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      User\n    ])\n  ],\n  providers: [UserService],\n  controllers: [UserController]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commerce/commerce.controller.ts\n            \n            controller\n            CommerceController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commerce/commerce.service.ts\n            \n            injectable\n            CommerceService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/product.ts\n            \n            class\n            ProductDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/purchase.ts\n            \n            class\n            PurchaseDTO\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/dto/transaction.ts\n            \n            class\n            TransactionDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interface/Entity.ts\n            \n            interface\n            EntityI\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interface/transaction.interface.ts\n            \n            interface\n            TransactionI\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/commerce.entity.ts\n            \n            class\n            Commerce\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/transaction.entity.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.4.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/swagger : ^3.0.2\n        \n            @nestjs/typeorm : ^6.1.0\n        \n            pg : ^7.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            swagger-ui-express : ^4.0.2\n        \n            typeorm : ^0.2.17\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Status   (src/.../Enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/Enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 procesando\n                            \n                        \n                        \n                            \n                                Value : Procesando\n                            \n                        \n                        \n                            \n                                 preaprobado\n                            \n                        \n                        \n                            \n                                Value : Preaprobado\n                            \n                        \n                        \n                            \n                                 aprobado\n                            \n                        \n                        \n                            \n                                Value : Aprobado\n                            \n                        \n                        \n                            \n                                 bloqueado\n                            \n                        \n                        \n                            \n                                Value : Bloqueado\n                            \n                        \n                        \n                            \n                                 rechazado\n                            \n                        \n                        \n                            \n                                Value : Rechazado\n                            \n                        \n                        \n                            \n                                 anulado\n                            \n                        \n                        \n                            \n                                Value : Anulado\n                            \n                        \n                        \n                            \n                                 pendiente\n                            \n                        \n                        \n                            \n                                Value : Pendiente\n                            \n                        \n                        \n                            \n                                 disputa\n                            \n                        \n                        \n                            \n                                Value : Disputa\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommerceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CommerceModule\n\n\n\ncluster_CommerceModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommerceModule\n\nCommerceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommerceModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\nAppModule -->\n\nTransactionService->AppModule\n\n\n\n\n\nCommerceService\n\nCommerceService\n\nCommerceModule -->\n\nCommerceService->CommerceModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
