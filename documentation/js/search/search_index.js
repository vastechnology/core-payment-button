var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.109,1,1.318]],["body/controllers/AppController.html",[0,1.684,1,2,2,1.312,3,0.641,4,0.518,5,0.518,6,2.281,7,0.641,8,2,9,3.41,10,1.559,11,0.066,12,1.107,13,2.909,14,1.559,15,1.684,16,0.997,17,0.931,18,1.569,19,2.281,20,0.641,21,0.406,22,1.868,23,1.312,24,1.559,25,2.909,26,0.039,27,0.05,28,0.039]],["title/modules/AppModule.html",[29,1.109,30,1.318]],["body/modules/AppModule.html",[1,1.906,2,1.385,3,0.479,4,0.387,5,0.387,11,0.066,16,1.185,17,0.696,18,1.608,19,1.706,20,0.479,21,0.304,22,1.397,23,0.981,26,0.029,27,0.041,28,0.029,29,1.604,30,2.449,31,0.981,32,0.981,33,1.397,34,1.397,35,0.981,36,2.283,37,1.397,38,1.706,39,1.706,40,1.706,41,1.906,42,1.353,43,1.971,44,1.397,45,1.397,46,2.176,47,1.604,48,2.407,49,2.176,50,2.176,51,2.176,52,2.176,53,1.706,54,1.166,55,3.556,56,1.166,57,2.176]],["title/injectables/AppService.html",[18,0.936,58,1.109]],["body/injectables/AppService.html",[3,0.68,4,0.549,5,0.549,7,0.68,8,2.078,9,3.486,11,0.065,12,1.175,14,1.655,15,1.749,16,0.825,17,0.988,18,1.475,20,0.68,21,0.431,24,1.655,26,0.041,27,0.052,28,0.041,58,1.749,59,1.983,60,2.421,61,3.088,62,3.088,63,3.088]],["title/classes/Transaction.html",[21,0.343,64,0.936]],["body/classes/Transaction.html",[3,0.466,4,0.377,5,0.377,7,0.466,10,2.309,11,0.065,12,1.64,15,1.89,16,0.566,20,0.466,21,0.295,26,0.028,27,0.04,28,0.028,56,1.135,64,1.146,65,1.359,66,1.66,67,1.933,68,2.249,69,2.249,70,2.588,71,2.249,72,2.249,73,2.249,74,2.249,75,1.64,76,1.89,77,3.011,78,2.117,79,4.189,80,2.117,81,3.011,82,2.117,83,3.503,84,2.117,85,3.011,86,2.117,87,2.117,88,2.117,89,3.011,90,2.117,91,3.011,92,2.117]],["title/controllers/TransactionController.html",[0,1.109,47,1.109]],["body/controllers/TransactionController.html",[0,0.637,2,0.637,3,0.311,4,0.251,5,0.251,7,0.311,8,1.191,10,1.816,11,0.065,12,1.289,14,1.816,16,0.833,17,0.452,20,0.311,21,0.197,22,0.907,23,0.637,24,1.816,26,0.019,27,0.03,28,0.019,42,0.88,47,1.003,64,1.562,75,1.186,76,1.759,93,1.108,94,1.413,95,1.743,96,1.743,97,3.116,98,2.223,99,1.743,100,1.108,101,2.017,102,1.413,103,4.105,104,3.283,105,2.223,106,3.598,107,1.743,108,1.413,109,2.223,110,2.223,111,2.223,112,1.413,113,2.444,114,2.444,115,2.001,116,4.105,117,1.413,118,1.413,119,2.748,120,1.413,121,3.598,122,1.413,123,2.223,124,1.413,125,1.413,126,1.413,127,1.413,128,1.413,129,2.821,130,1.413,131,1.413,132,1.108,133,1.413,134,2.223,135,1.413,136,1.413,137,1.413,138,1.413,139,3.598,140,2.223,141,0.907,142,1.413,143,1.413,144,3.388,145,1.413,146,1.413,147,1.413,148,1.413,149,1.413,150,1.413,151,1.413,152,1.413,153,1.413,154,1.413,155,1.413,156,1.413,157,1.413]],["title/classes/TransactionDTO.html",[21,0.343,101,1.318]],["body/classes/TransactionDTO.html",[3,0.47,4,0.38,5,0.38,7,0.47,10,2.25,11,0.065,12,1.598,15,1.894,16,0.57,20,0.47,21,0.298,23,2.175,26,0.029,27,0.041,28,0.029,65,1.37,67,1.944,68,2.259,69,2.259,70,2.596,72,2.259,73,2.259,74,2.259,75,1.598,76,1.727,101,1.622,141,1.37,158,1.673,159,4.688,160,2.134,161,2.134,162,2.134,163,2.134,164,2.134,165,2.134]],["title/interfaces/TransactionI.html",[166,1.318,167,1.318]],["body/interfaces/TransactionI.html",[3,0.518,4,0.418,5,0.418,7,0.518,11,0.063,15,2.07,20,0.518,26,0.032,27,0.043,28,0.032,67,2.08,68,2.565,69,2.565,70,2.849,71,2.565,72,2.565,73,2.565,74,2.565,75,1.689,76,2.07,115,3.077,166,1.26,167,1.736,168,2.352,169,1.844]],["title/modules/TransactionModule.html",[29,1.109,41,1.109]],["body/modules/TransactionModule.html",[2,1.548,3,0.563,4,0.455,5,0.455,11,0.066,16,1.153,17,0.819,20,0.563,21,0.357,26,0.034,27,0.046,28,0.034,29,1.747,31,1.154,32,1.154,33,1.643,34,1.643,35,1.154,36,2.486,37,1.643,41,2.004,42,1.422,43,2.203,44,1.643,45,1.643,47,1.747,48,2.006,53,2.006,54,1.371,64,1.306,132,2.006,170,2.559,171,2.559,172,2.559,173,2.006,174,2.559,175,2.559]],["title/injectables/TransactionService.html",[42,0.787,58,1.109]],["body/injectables/TransactionService.html",[3,0.31,4,0.25,5,0.25,7,0.31,8,1.187,11,0.067,12,1.366,14,1.811,16,0.903,17,0.45,20,0.31,21,0.196,23,0.634,24,2.197,26,0.019,27,0.03,28,0.019,42,0.709,54,0.753,56,0.753,58,0.999,59,0.903,64,0.843,71,2.305,75,1.286,76,1.807,95,1.736,96,1.736,99,1.736,100,1.736,113,2.65,114,2.65,115,2.17,129,2.437,167,2.013,173,1.103,176,1.103,177,4.412,178,3.107,179,2.214,180,2.214,181,1.406,182,2.437,183,1.406,184,2.214,185,1.406,186,2.214,187,1.406,188,3.892,189,1.406,190,2.214,191,1.406,192,2.214,193,1.406,194,1.406,195,1.406,196,1.406,197,1.406,198,1.406,199,1.406,200,3.38,201,3.38,202,1.406,203,3.38,204,4.18,205,1.406,206,1.406,207,2.214,208,1.406,209,1.406,210,1.406,211,1.406,212,1.406,213,1.406]],["title/coverage.html",[214,2.145]],["body/coverage.html",[0,1.624,1,1.474,5,0.489,6,2.156,11,0.064,18,1.046,21,0.502,26,0.037,27,0.048,28,0.037,35,1.24,42,0.88,47,1.24,58,1.624,60,2.156,64,1.046,66,2.156,75,1.046,93,2.156,101,1.474,107,2.156,158,2.156,166,1.474,167,1.474,169,2.156,176,2.156,214,1.765,215,2.75,216,2.75,217,2.75,218,4.684,219,3.599,220,2.156,221,2.75,222,2.75,223,3.599,224,3.599,225,2.75,226,2.75,227,2.75]],["title/dependencies.html",[32,1.332,228,2.061]],["body/dependencies.html",[11,0.066,17,0.972,26,0.041,27,0.051,28,0.041,32,1.37,54,1.627,56,1.627,141,1.95,229,4.206,230,3.037,231,3.037,232,3.836,233,3.037,234,3.037,235,3.037,236,3.037,237,3.037,238,3.037,239,3.037,240,3.037,241,3.037,242,3.037,243,3.037,244,3.037,245,3.037,246,3.037,247,3.037]],["title/miscellaneous/functions.html",[248,1.616,249,2.316]],["body/miscellaneous/functions.html",[7,0.801,11,0.057,26,0.049,27,0.057,28,0.049,35,2.054,220,2.852,248,2.852,249,2.852,250,3.637]],["title/index.html",[7,0.454,251,2.061,252,2.061]],["body/index.html",[4,0.408,11,0.063,26,0.031,27,0.043,28,0.031,104,1.798,182,1.798,214,1.472,253,2.293,254,2.293,255,3.184,256,2.293,257,2.293,258,2.293,259,2.293,260,2.293,261,2.293,262,2.293,263,2.293,264,2.293,265,3.658,266,2.293,267,2.293,268,2.293,269,3.658,270,4.407,271,2.293,272,2.293,273,2.293,274,2.293,275,4.297,276,2.293,277,2.293,278,3.184,279,2.293,280,2.293,281,2.293,282,3.658,283,2.293,284,3.184,285,2.293,286,2.293,287,2.293,288,2.497,289,3.184,290,3.184,291,2.293,292,2.293,293,2.293,294,2.293,295,2.293,296,2.293,297,2.293,298,2.293,299,2.293,300,2.293,301,2.293,302,2.293,303,2.293,304,2.293,305,2.293,306,2.293,307,2.293,308,2.293,309,2.293,310,2.293,311,2.293,312,2.293,313,2.293]],["title/modules.html",[31,1.507]],["body/modules.html",[11,0.057,26,0.048,27,0.057,28,0.048,30,1.911,31,1.609,41,1.609,288,3.32,314,4.233,315,4.233,316,4.233]],["title/overview.html",[317,2.619]],["body/overview.html",[2,1.292,11,0.061,18,1.557,26,0.038,27,0.05,28,0.038,29,1.292,30,2.532,31,1.292,32,1.292,33,1.839,34,1.839,35,1.292,36,1.839,37,1.839,38,2.246,39,2.246,40,2.246,41,2.019,42,1.384,43,2.373,44,1.839,45,1.839,59,1.839,65,1.839,166,1.535,317,2.246,318,4.323,319,2.864]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["0.2.17",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":319,"title":{},"body":{"overview.html":{}}}],["11",{"_index":89,"title":{},"body":{"classes/Transaction.html":{}}}],["2",{"_index":318,"title":{},"body":{"overview.html":{}}}],["2.6.2",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":103,"title":{},"body":{"controllers/TransactionController.html":{}}}],["3.0.2",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["7.10.0",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":296,"title":{},"body":{"index.html":{}}}],["amount",{"_index":68,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{}}}],["angular",{"_index":264,"title":{},"body":{"index.html":{}}}],["apicreatedresponse",{"_index":140,"title":{},"body":{"controllers/TransactionController.html":{}}}],["apimodelproperty",{"_index":159,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["apiresponse",{"_index":139,"title":{},"body":{"controllers/TransactionController.html":{}}}],["apiusetags",{"_index":138,"title":{},"body":{"controllers/TransactionController.html":{}}}],["apiusetags('transaction",{"_index":142,"title":{},"body":{"controllers/TransactionController.html":{}}}],["app",{"_index":273,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":261,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":177,"title":{},"body":{"injectables/TransactionService.html":{}}}],["author",{"_index":306,"title":{},"body":{"index.html":{}}}],["await",{"_index":201,"title":{},"body":{"injectables/TransactionService.html":{}}}],["backers",{"_index":297,"title":{},"body":{"index.html":{}}}],["bash",{"_index":269,"title":{},"body":{"index.html":{}}}],["body",{"_index":136,"title":{},"body":{"controllers/TransactionController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":316,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":314,"title":{},"body":{"modules.html":{}}}],["building",{"_index":256,"title":{},"body":{"index.html":{}}}],["catch",{"_index":203,"title":{},"body":{"injectables/TransactionService.html":{}}}],["catch((error",{"_index":212,"title":{},"body":{"injectables/TransactionService.html":{}}}],["class",{"_index":21,"title":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["classes",{"_index":65,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":170,"title":{},"body":{"modules/TransactionModule.html":{}}}],["cluster_transactionmodule_providers",{"_index":171,"title":{},"body":{"modules/TransactionModule.html":{}}}],["column",{"_index":79,"title":{},"body":{"classes/Transaction.html":{}}}],["column('date",{"_index":81,"title":{},"body":{"classes/Transaction.html":{}}}],["column('float",{"_index":77,"title":{},"body":{"classes/Transaction.html":{}}}],["column('int",{"_index":85,"title":{},"body":{"classes/Transaction.html":{}}}],["column({length",{"_index":88,"title":{},"body":{"classes/Transaction.html":{}}}],["commerce",{"_index":69,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{}}}],["connection",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":206,"title":{},"body":{"injectables/TransactionService.html":{}}}],["constructor",{"_index":180,"title":{},"body":{"injectables/TransactionService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/TransactionController.html":{}}}],["constructor(transactionmodel",{"_index":181,"title":{},"body":{"injectables/TransactionService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/TransactionController.html":{}},"body":{"controllers/AppController.html":{},"controllers/TransactionController.html":{},"coverage.html":{}}}],["controller('transaction",{"_index":143,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["coverage",{"_index":214,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":105,"title":{},"body":{"controllers/TransactionController.html":{}}}],["created",{"_index":111,"title":{},"body":{"controllers/TransactionController.html":{}}}],["createtransaction",{"_index":95,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["createtransaction(@body",{"_index":149,"title":{},"body":{"controllers/TransactionController.html":{}}}],["createtransaction(transaction",{"_index":100,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["date",{"_index":70,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"injectables/TransactionService.html":{}}}],["delete",{"_index":119,"title":{},"body":{"controllers/TransactionController.html":{}}}],["delete(':id",{"_index":155,"title":{},"body":{"controllers/TransactionController.html":{}}}],["delete(':id')@apiresponse({status",{"_index":118,"title":{},"body":{"controllers/TransactionController.html":{}}}],["deleteresult",{"_index":197,"title":{},"body":{"injectables/TransactionService.html":{}}}],["deletetransaction",{"_index":96,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["deletetransaction(@param('id",{"_index":156,"title":{},"body":{"controllers/TransactionController.html":{}}}],["deletetransaction(id",{"_index":186,"title":{},"body":{"injectables/TransactionService.html":{}}}],["deletetransaction(id_transaction",{"_index":117,"title":{},"body":{"controllers/TransactionController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":104,"title":{},"body":{"controllers/TransactionController.html":{},"index.html":{}}}],["development",{"_index":274,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["dto/transaction",{"_index":133,"title":{},"body":{"controllers/TransactionController.html":{}}}],["e2e",{"_index":285,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":257,"title":{},"body":{"index.html":{}}}],["entity",{"_index":91,"title":{},"body":{"classes/Transaction.html":{}}}],["error",{"_index":204,"title":{},"body":{"injectables/TransactionService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["express",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["findalltransaction",{"_index":178,"title":{},"body":{"injectables/TransactionService.html":{}}}],["findtransaction",{"_index":179,"title":{},"body":{"injectables/TransactionService.html":{}}}],["findtransaction(id",{"_index":190,"title":{},"body":{"injectables/TransactionService.html":{}}}],["framework",{"_index":255,"title":{},"body":{"index.html":{}}}],["function",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":249,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":146,"title":{},"body":{"controllers/TransactionController.html":{}}}],["get(':id')@apiresponse({status",{"_index":126,"title":{},"body":{"controllers/TransactionController.html":{}}}],["get()@apiresponse({status",{"_index":122,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getalltransaction",{"_index":97,"title":{},"body":{"controllers/TransactionController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":251,"title":{"index.html":{}},"body":{}}],["gettransaction",{"_index":98,"title":{},"body":{"controllers/TransactionController.html":{}}}],["gettransaction(@param('id",{"_index":147,"title":{},"body":{"controllers/TransactionController.html":{}}}],["gettransaction(id_transaction",{"_index":125,"title":{},"body":{"controllers/TransactionController.html":{}}}],["grow",{"_index":293,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":262,"title":{},"body":{"index.html":{}}}],["hello",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":303,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":310,"title":{},"body":{"index.html":{}}}],["id",{"_index":71,"title":{},"body":{"classes/Transaction.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["id_transaction",{"_index":121,"title":{},"body":{"controllers/TransactionController.html":{}}}],["identifier",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["injectable",{"_index":58,"title":{"injectables/AppService.html":{},"injectables/TransactionService.html":{}},"body":{"injectables/AppService.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["injectables",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"injectables/TransactionService.html":{},"overview.html":{}}}],["injectrepository",{"_index":196,"title":{},"body":{"injectables/TransactionService.html":{}}}],["injectrepository(transaction",{"_index":198,"title":{},"body":{"injectables/TransactionService.html":{}}}],["inspired",{"_index":263,"title":{},"body":{"index.html":{}}}],["install",{"_index":271,"title":{},"body":{"index.html":{}}}],["installation",{"_index":268,"title":{},"body":{"index.html":{}}}],["interface",{"_index":166,"title":{"interfaces/TransactionI.html":{}},"body":{"interfaces/TransactionI.html":{},"coverage.html":{},"overview.html":{}}}],["interface/transaction.interface",{"_index":195,"title":{},"body":{"injectables/TransactionService.html":{}}}],["interfaces",{"_index":168,"title":{},"body":{"interfaces/TransactionI.html":{}}}],["join",{"_index":299,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":307,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["length",{"_index":92,"title":{},"body":{"classes/Transaction.html":{}}}],["license",{"_index":313,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":290,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["miscellaneous",{"_index":248,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":289,"title":{},"body":{"index.html":{}}}],["mode",{"_index":278,"title":{},"body":{"index.html":{}}}],["models/transaction.entity",{"_index":173,"title":{},"body":{"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":302,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":308,"title":{},"body":{"index.html":{}}}],["name",{"_index":114,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["nest",{"_index":265,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":312,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":141,"title":{},"body":{"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["new",{"_index":107,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["newtransaction",{"_index":207,"title":{},"body":{"injectables/TransactionService.html":{}}}],["node.js",{"_index":254,"title":{},"body":{"index.html":{}}}],["npm",{"_index":270,"title":{},"body":{"index.html":{}}}],["number",{"_index":76,"title":{},"body":{"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["number,@body",{"_index":153,"title":{},"body":{"controllers/TransactionController.html":{}}}],["object",{"_index":116,"title":{},"body":{"controllers/TransactionController.html":{}}}],["open",{"_index":291,"title":{},"body":{"index.html":{}}}],["optional",{"_index":115,"title":{},"body":{"controllers/TransactionController.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{}}}],["order",{"_index":72,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["overview",{"_index":317,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":228,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":137,"title":{},"body":{"controllers/TransactionController.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["payment_method",{"_index":73,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{}}}],["pg",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":300,"title":{},"body":{"index.html":{}}}],["post",{"_index":134,"title":{},"body":{"controllers/TransactionController.html":{}}}],["post()@apiresponse({status",{"_index":102,"title":{},"body":{"controllers/TransactionController.html":{}}}],["prefix",{"_index":94,"title":{},"body":{"controllers/TransactionController.html":{}}}],["primarygeneratedcolumn",{"_index":83,"title":{},"body":{"classes/Transaction.html":{}}}],["private",{"_index":199,"title":{},"body":{"injectables/TransactionService.html":{}}}],["production",{"_index":280,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":253,"title":{},"body":{"index.html":{}}}],["project",{"_index":292,"title":{},"body":{"index.html":{}}}],["promise",{"_index":188,"title":{},"body":{"injectables/TransactionService.html":{}}}],["properties",{"_index":67,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["put",{"_index":135,"title":{},"body":{"controllers/TransactionController.html":{}}}],["put(':id",{"_index":151,"title":{},"body":{"controllers/TransactionController.html":{}}}],["put(':id')@apiresponse({status",{"_index":130,"title":{},"body":{"controllers/TransactionController.html":{}}}],["read",{"_index":301,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"injectables/TransactionService.html":{}}}],["record",{"_index":109,"title":{},"body":{"controllers/TransactionController.html":{}}}],["reference",{"_index":74,"title":{},"body":{"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{}}}],["reflect",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":182,"title":{},"body":{"injectables/TransactionService.html":{},"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}],["response",{"_index":211,"title":{},"body":{"injectables/TransactionService.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["rimraf",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":275,"title":{},"body":{"index.html":{}}}],["running",{"_index":272,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":258,"title":{},"body":{"index.html":{}}}],["server",{"_index":259,"title":{},"body":{"index.html":{}}}],["side",{"_index":260,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"index.html":{}}}],["sponsors",{"_index":295,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/transaction.entity.ts",{"_index":66,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/models/transaction.entity.ts:12",{"_index":86,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:15",{"_index":90,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:18",{"_index":78,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:21",{"_index":82,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:24",{"_index":87,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:6",{"_index":84,"title":{},"body":{"classes/Transaction.html":{}}}],["src/models/transaction.entity.ts:9",{"_index":80,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/dto/transaction.ts",{"_index":158,"title":{},"body":{"classes/TransactionDTO.html":{},"coverage.html":{}}}],["src/transaction/dto/transaction.ts:12",{"_index":165,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["src/transaction/dto/transaction.ts:15",{"_index":160,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["src/transaction/dto/transaction.ts:18",{"_index":162,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["src/transaction/dto/transaction.ts:21",{"_index":164,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["src/transaction/dto/transaction.ts:6",{"_index":161,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["src/transaction/dto/transaction.ts:9",{"_index":163,"title":{},"body":{"classes/TransactionDTO.html":{}}}],["src/transaction/interface/transaction.interface.ts",{"_index":169,"title":{},"body":{"interfaces/TransactionI.html":{},"coverage.html":{}}}],["src/transaction/transaction.controller.ts",{"_index":93,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["src/transaction/transaction.controller.ts:13",{"_index":124,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:19",{"_index":127,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:26",{"_index":112,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:32",{"_index":131,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:38",{"_index":120,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.module.ts",{"_index":172,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/transaction/transaction.service.ts",{"_index":176,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/transaction/transaction.service.ts:14",{"_index":189,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:22",{"_index":191,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:30",{"_index":185,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:39",{"_index":193,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:49",{"_index":187,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:8",{"_index":183,"title":{},"body":{"injectables/TransactionService.html":{}}}],["start",{"_index":276,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":279,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":281,"title":{},"body":{"index.html":{}}}],["started",{"_index":252,"title":{"index.html":{}},"body":{}}],["starter",{"_index":267,"title":{},"body":{"index.html":{}}}],["statements",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":144,"title":{},"body":{"controllers/TransactionController.html":{}}}],["stay",{"_index":304,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Transaction.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{}}}],["success",{"_index":106,"title":{},"body":{"controllers/TransactionController.html":{}}}],["successfully",{"_index":110,"title":{},"body":{"controllers/TransactionController.html":{}}}],["support",{"_index":288,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":315,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":282,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":287,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":286,"title":{},"body":{"index.html":{}}}],["tests",{"_index":284,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":294,"title":{},"body":{"index.html":{}}}],["then((response",{"_index":210,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.transactionmodel.delete",{"_index":213,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.find",{"_index":202,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.findone",{"_index":205,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.save(transaction",{"_index":208,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.update",{"_index":209,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionservice.createtransaction(transaction",{"_index":150,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.deletetransaction(id_transaction",{"_index":157,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.findalltransaction",{"_index":145,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.findtransaction(id_transaction",{"_index":148,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.updatetransaction(id_transaction",{"_index":154,"title":{},"body":{"controllers/TransactionController.html":{}}}],["touch",{"_index":305,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":64,"title":{"classes/Transaction.html":{}},"body":{"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transaction'})@apicreatedresponse({description",{"_index":108,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transaction.controller",{"_index":174,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.service",{"_index":132,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{}}}],["transaction/transaction.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["transaction/transaction.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["transaction/transaction.service",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["transactioncontroller",{"_index":47,"title":{"controllers/TransactionController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactiondto",{"_index":101,"title":{"classes/TransactionDTO.html":{}},"body":{"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"coverage.html":{}}}],["transactioni",{"_index":167,"title":{"interfaces/TransactionI.html":{}},"body":{"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transactionmodel",{"_index":184,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactionmodule",{"_index":41,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactions",{"_index":123,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transactionservice",{"_index":42,"title":{"injectables/TransactionService.html":{}},"body":{"modules/AppModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["try",{"_index":200,"title":{},"body":{"injectables/TransactionService.html":{}}}],["twitter",{"_index":311,"title":{},"body":{"index.html":{}}}],["type",{"_index":75,"title":{},"body":{"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionDTO.html":{},"interfaces/TransactionI.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["typeorm",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{}}}],["typeormmodule.forfeature",{"_index":175,"title":{},"body":{"modules/TransactionModule.html":{}}}],["typeormmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":266,"title":{},"body":{"index.html":{}}}],["ui",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":283,"title":{},"body":{"index.html":{}}}],["update",{"_index":129,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["updatetransaction",{"_index":99,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["updatetransaction(@param('id",{"_index":152,"title":{},"body":{"controllers/TransactionController.html":{}}}],["updatetransaction(id",{"_index":192,"title":{},"body":{"injectables/TransactionService.html":{}}}],["updatetransaction(id_transaction",{"_index":128,"title":{},"body":{"controllers/TransactionController.html":{}}}],["watch",{"_index":277,"title":{},"body":{"index.html":{}}}],["website",{"_index":309,"title":{},"body":{"index.html":{}}}],["world",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":194,"title":{},"body":{"injectables/TransactionService.html":{}}}],["you'd",{"_index":298,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTransactionModule\n\nTransactionModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nAppModule -->\n\nTransactionService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            TransactionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TransactionModule } from './transaction/transaction.module';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TransactionController } from './transaction/transaction.controller';\nimport { TransactionService } from './transaction/transaction.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\n\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(),\n    TransactionModule\n  ],\n  controllers: [AppController, TransactionController],\n  providers: [AppService, TransactionService],\n})\nexport class AppModule {\n  constructor(private readonly connection: Connection){}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/transaction.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                commerce\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                order\n                            \n                            \n                                payment_method\n                            \n                            \n                                reference\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('float')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commerce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('date')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            payment_method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 11})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/models/transaction.entity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Transaction {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    commerce: string;\n\n    @Column('int')\n    order: number;\n\n    @Column({ length: 11 })\n    reference: string;\n\n    @Column('float')\n    amount: number;\n\n    @Column('date')\n    date: Date;\n\n    @Column()\n    payment_method: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transaction\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTransaction\n                            \n                            \n                                deleteTransaction\n                            \n                            \n                                getAllTransaction\n                            \n                            \n                                getTransaction\n                            \n                            \n                                updateTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTransaction\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTransaction(transaction: TransactionDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 200, description: 'Create success new transaction'})@ApiCreatedResponse({description: 'The record has been successfully created.'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                TransactionDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTransaction\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTransaction(id_transaction: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiResponse({status: 200, description: 'Delete success transaction'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_transaction\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllTransaction\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllTransaction()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'Get all transactions'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransaction\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransaction(id_transaction: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiResponse({status: 200, description: 'Get a transaction'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_transaction\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTransaction\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTransaction(id_transaction: number, update: TransactionDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiResponse({status: 200, description: 'Update success transaction'})\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_transaction\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    update\n                                    \n                                                TransactionDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { TransactionService } from './transaction.service';\nimport { TransactionDTO } from './dto/transaction';\nimport { Controller, Get, Post, Put, Delete, Body, Param } from '@nestjs/common';\nimport { ApiUseTags, ApiResponse, ApiCreatedResponse } from '@nestjs/swagger';\n\n@ApiUseTags('transaction')\n@Controller('transaction')\nexport class TransactionController {\n    constructor(private readonly transactionService: TransactionService){}\n\n    @Get()\n    @ApiResponse({ status: 200, description: 'Get all transactions'})\n    getAllTransaction(): Object {\n        return this.transactionService.findAllTransaction();\n    }\n\n    @Get(':id')\n    @ApiResponse({ status: 200, description: 'Get a transaction'})\n    getTransaction(@Param('id') id_transaction: number): Object {\n        return this.transactionService.findTransaction(id_transaction);\n    }\n\n    @Post()\n    @ApiResponse({ status: 200, description: 'Create success new transaction'})\n    @ApiCreatedResponse({ description: 'The record has been successfully created.'})\n    createTransaction(@Body() transaction: TransactionDTO): Object {\n        return this.transactionService.createTransaction(transaction);\n    }\n\n    @Put(':id')\n    @ApiResponse({ status: 200, description: 'Update success transaction'})\n    updateTransaction(@Param('id') id_transaction: number,@Body() update: TransactionDTO): Object {\n        return this.transactionService.updateTransaction(id_transaction, update);\n    }\n\n    @Delete(':id')\n    @ApiResponse({ status: 200, description: 'Delete success transaction'})\n    deleteTransaction(@Param('id') id_transaction: number): Object {\n        return this.transactionService.deleteTransaction(id_transaction);\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionDTO.html":{"url":"classes/TransactionDTO.html","title":"class - TransactionDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/dto/transaction.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                amount\n                            \n                            \n                                    Readonly\n                                commerce\n                            \n                            \n                                    Readonly\n                                date\n                            \n                            \n                                    Readonly\n                                order\n                            \n                            \n                                    Readonly\n                                payment_method\n                            \n                            \n                                    Readonly\n                                reference\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/dto/transaction.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            commerce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/dto/transaction.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/dto/transaction.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/dto/transaction.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            payment_method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/dto/transaction.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/transaction/dto/transaction.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\n\nexport class TransactionDTO {\n\n    @ApiModelProperty()\n    readonly commerce: string;\n\n    @ApiModelProperty()\n    readonly order: number;\n\n    @ApiModelProperty()\n    readonly reference: string;\n\n    @ApiModelProperty()\n    readonly amount: number;\n\n    @ApiModelProperty()\n    readonly date: Date;\n\n    @ApiModelProperty()\n    readonly payment_method: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransactionI.html":{"url":"interfaces/TransactionI.html","title":"interface - TransactionI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransactionI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/interface/transaction.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        amount\n                                \n                                \n                                            Optional\n                                        commerce\n                                \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        payment_method\n                                \n                                \n                                            Optional\n                                        reference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commerce\n                                    \n                                \n                                \n                                    \n                                        commerce:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_method\n                                    \n                                \n                                \n                                    \n                                        payment_method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference\n                                    \n                                \n                                \n                                    \n                                        reference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransactionI {\n    id?: number;\n    commerce?: string;\n    order?: number;\n    reference?: string;\n    amount?: number;\n    date?: Date;\n    payment_method?: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nTransactionService\n\nTransactionService\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transaction/transaction.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Transaction } from './../models/transaction.entity';\nimport { TransactionController } from './transaction.controller';\nimport { TransactionService } from './transaction.service';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([\n            Transaction\n        ])\n    ],\n    providers: [TransactionService],\n    controllers: [TransactionController]\n})\nexport class TransactionModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTransaction\n                            \n                            \n                                    Async\n                                deleteTransaction\n                            \n                            \n                                    Async\n                                findAllTransaction\n                            \n                            \n                                    Async\n                                findTransaction\n                            \n                            \n                                    Async\n                                updateTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionModel: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/transaction/transaction.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionModel\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransaction(transaction: TransactionI)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                TransactionI\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTransaction(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findTransaction(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTransaction(id: number, update?: TransactionI)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    update\n                                    \n                                                TransactionI\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Transaction } from './../models/transaction.entity';\nimport { TransactionI } from './interface/transaction.interface';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, DeleteResult } from 'typeorm';\n\n@Injectable()\nexport class TransactionService {\n    constructor(\n        @InjectRepository(Transaction) \n        private readonly transactionModel: Repository\n    ){}\n\n    async findAllTransaction(): Promise{\n        try {\n            return await this.transactionModel.find();\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async findTransaction(id: number): Promise{\n        try {\n            return await this.transactionModel.findOne({ id })\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async createTransaction(transaction: TransactionI){\n        try {\n            const newTransaction = await this.transactionModel.save(transaction);\n            return newTransaction;\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async updateTransaction(id: number, update?: TransactionI): Promise{\n        try {\n            return await this.transactionModel.update({ id }, update)\n            .then((response) => response)\n            .catch((error) => error);\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async deleteTransaction(id: number): Promise{\n        try {\n            return await this.transactionModel.delete({ id });\n        } catch (error) {\n            return error;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/transaction.entity.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/transaction/dto/transaction.ts\n            \n            class\n            TransactionDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/transaction/interface/transaction.interface.ts\n            \n            interface\n            TransactionI\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/swagger : ^3.0.2\n        \n            @nestjs/typeorm : ^6.1.0\n        \n            pg : ^7.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            swagger-ui-express : ^4.0.2\n        \n            typeorm : ^0.2.17\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTransactionModule\n\nTransactionModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\nAppModule -->\n\nTransactionService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
